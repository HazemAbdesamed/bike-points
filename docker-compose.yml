version: '3.8'

services:

  kafka1:
      image: bitnami/kafka:3.5.0
      container_name: kafka1
      hostname: kafka1
      ports:
        - "9092:9092"
        - "9093:9093"
      environment:
        # KRaft settings
        - KAFKA_CFG_NODE_ID=1
        - KAFKA_CFG_PROCESS_ROLES=controller,broker
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093
        - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
        # Listeners
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
        - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
        - ALLOW_PLAINTEXT_LISTENER=yes
      volumes:
        - ./kafka/config/entrypoint.sh:/entrypoint.sh
        - ./kafka/scripts/:/scripts
        - kafka-data:/var/lib/kafka/data
      networks:
        - airflow_data-network
        - spark_data-network


  spark:
    image: bitnami/spark:3.5.0
    container_name: spark
    hostname: spark
    user: root
    ports:
      - 8080:8080
      - 8081:7077
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_UI_PORT=8080
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=NO
      - SPARK_USER=spark
    volumes:
      - ./spark/consume_from_kafka:/opt/bitnami/spark/consume_from_kafka
      - ./spark/requirements.txt:/opt/bitnami/spark/requirements.txt
      - spark-data:/opt/bitnami/spark/data
    networks:
       - spark_data-network

volumes:
  kafka-data:
  spark-data:

networks:
  spark_data-network:
    driver: bridge
  airflow_data-network:
    external: true  
